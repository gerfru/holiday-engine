# Simple test without imports
import re

def normalize_city_name(city: str) -> str:
    """Normalize city names for consistent matching"""
    city = city.lower().strip()
    
    # Handle German umlauts and special characters
    replacements = {
        'Ã¤': 'ae', 'Ã¶': 'oe', 'Ã¼': 'ue', 'ÃŸ': 'ss',
        'Ã©': 'e', 'Ã¨': 'e', 'Ãª': 'e', 'Ã«': 'e',
        'Ã¡': 'a', 'Ã ': 'a', 'Ã¢': 'a', 'Ã£': 'a',
        'Ã­': 'i', 'Ã¬': 'i', 'Ã®': 'i', 'Ã¯': 'i',
        'Ã³': 'o', 'Ã²': 'o', 'Ã´': 'o', 'Ãµ': 'o',
        'Ãº': 'u', 'Ã¹': 'u', 'Ã»': 'u',
        'Ã§': 'c', 'Ã±': 'n'
    }
    
    for old, new in replacements.items():
        city = city.replace(old, new)
    
    # Remove special characters and normalize whitespace
    city = re.sub(r'[^\w\s]', '', city)
    city = re.sub(r'\s+', ' ', city).strip()
    
    return city

# Test the normalization
test_cases = [
    "Port de Soller",
    "Port de SÃ³ller", 
    "Palma de Mallorca"
]

print("ðŸ§ª Testing Normalization:")
for case in test_cases:
    normalized = normalize_city_name(case)
    print(f"'{case}' â†’ '{normalized}'")

# Test if our additions work
top_destinations_sample = {
    'port de soller': 'PMI',
    'soller': 'PMI',
    'palma de mallorca': 'PMI',
    'palma': 'PMI'
}

print("\nðŸ§ª Testing Lookups:")
for case in test_cases:
    normalized = normalize_city_name(case)
    result = top_destinations_sample.get(normalized, "NOT FOUND")
    print(f"'{case}' â†’ '{normalized}' â†’ {result}")